// <auto-generated />
using System;
using CarpetStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarpetStore.Migrations
{
    [DbContext(typeof(CarpetStoreWebDb))]
    [Migration("20240120192818_OrderAdded")]
    partial class OrderAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarpetStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CarpetStore.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("CarpetStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTrendingProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/06/02/441/51c2d295-dd5a-4151-ac51-e1ff7752a9b7_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Agra",
                            Price = 120m
                        },
                        new
                        {
                            Id = 2,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/06/05/678/d5f7b5a8-59f4-4d75-b378-e57676221162_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Bilbao",
                            Price = 180m
                        },
                        new
                        {
                            Id = 3,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/06/02/1154/0a883a2d-25b2-454c-b3c3-01a345f50191_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Contour",
                            Price = 140m
                        },
                        new
                        {
                            Id = 4,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/06/02/1151/d860dcf9-00ca-4a38-8c47-5f6570edae6c_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Dulce",
                            Price = 220m
                        },
                        new
                        {
                            Id = 5,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/06/02/256/39ba5cc4-6a38-4c7a-8079-ecc3ab2fe929_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Kids",
                            Price = 89m
                        },
                        new
                        {
                            Id = 6,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/11/20/3382/5ef2b90e-4527-440f-87b0-a84240087ae2_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Ibiza",
                            Price = 320m
                        },
                        new
                        {
                            Id = 7,
                            Detail = "Dimensions: 150x220",
                            ImageUrl = "https://fe3b71.cdn.akinoncloud.com/products/2023/06/05/2620/55e4d03a-d072-4fae-952f-86d89466bbef_size1024x1319.jpg",
                            IsTrendingProduct = true,
                            Name = "Pena",
                            Price = 425m
                        });
                });

            modelBuilder.Entity("CarpetStore.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("CarpetStore.Models.OrderDetail", b =>
                {
                    b.HasOne("CarpetStore.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarpetStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CarpetStore.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("CarpetStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CarpetStore.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
